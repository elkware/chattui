package ui

import (
	"bytes"
	"encoding/base64"
	"image/png"
	"strings"

	"chattui/internal/config"
	tv "github.com/rivo/tview"
)

const logo = ""

type ConfigUI struct {
	Form     *tv.Form
	root     *tv.Flex
	app      *tv.Application
	FormRoot *tv.Flex
}

func (c *ConfigUI) Init() {
	c.Form = tv.NewForm()

	imgBytes, _ := base64.StdEncoding.DecodeString(logo)
	img, err := png.Decode(bytes.NewReader(imgBytes))
	if err != nil {
		panic(err)
	}

	c.Form.AddImage("", img, 0, 0, 64)
	c.Form.AddInputField("Open AI API Key", "", 0, nil, nil)
	c.Form.AddTextArea("Custom instructions", "", 0, 0, 0, nil)
	c.Form.AddButton("Save", func() {
		apiKey := c.Form.GetFormItemByLabel("Open AI API Key").(*tv.InputField).GetText()
		instructions := c.Form.GetFormItemByLabel("Custom instructions").(*tv.TextArea).GetText()
		instructions = strings.ReplaceAll(instructions, "\n", " ")
		instructions = strings.ReplaceAll(instructions, "\r", " ")
		instructions = strings.Trim(instructions, " ")
		config.AppConfig.CustomInstructions = instructions
		config.AppConfig.ApiKey = apiKey
		config.AppConfig.Save()
		c.app.SetRoot(c.root, true)
	})
	c.Form.AddButton("Cancel", func() {
		c.app.SetRoot(c.root, true)
	})
	c.Form.SetBorder(true)
	c.Form.SetTitle("Config")
	c.Form.SetButtonsAlign(tv.AlignCenter)
	c.Form.SetRect(0, 0, 60, 22)
	c.FormRoot = tv.NewFlex().SetDirection(tv.FlexRow).
		AddItem(nil, 0, 1, false).
		AddItem(
			tv.NewFlex().AddItem(nil, 0, 1, false).AddItem(c.Form, 60, 1, true).AddItem(nil, 0, 1, false),
			22, 1, false).
		AddItem(nil, 0, 1, false)
}

func NewConfigUI(app *tv.Application, root *tv.Flex) *ConfigUI {
	ui := &ConfigUI{}
	ui.Init()
	ui.root = root
	ui.app = app
	return ui
}
